# Generated by Django 2.2.13 on 2020-10-20 17:20

import creator.releases.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_fsm
import semantic_version.django_fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0001_move_jobs'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Release',
            fields=[
                ('kf_id', models.CharField(default=creator.releases.models.release_id, help_text='Kids First ID assigned to the release', max_length=11, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='UUID used internally')),
                ('name', models.CharField(help_text='Name of the release', max_length=256)),
                ('description', models.CharField(blank=True, help_text='Release notes', max_length=5000)),
                ('state', django_fsm.FSMField(default='waiting', help_text='The current state of the release', max_length=50)),
                ('version', semantic_version.django_fields.VersionField(coerce=False, default=creator.releases.models.next_version, help_text='Semantic version of the release', max_length=200, partial=False)),
                ('is_major', models.BooleanField(default=False, help_text='Whether the release is a major version change or not')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date created')),
                ('creator', models.ForeignKey(blank=True, help_text='The user who created the release', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='releases', to=settings.AUTH_USER_MODEL)),
                ('studies', models.ManyToManyField(help_text='kf_ids of the studies in this release', related_name='releases', to='studies.Study')),
            ],
            options={
                'permissions': [('list_all_release', 'Show all releases'), ('publish_release', 'Publish a release'), ('cancel_release', 'Cancel a release')],
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='ReleaseService',
            fields=[
                ('kf_id', models.CharField(default=creator.releases.models.task_service_id, help_text='Kids First ID assigned to the service', max_length=11, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='UUID used internally')),
                ('name', models.CharField(help_text='The name of the service', max_length=100)),
                ('description', models.CharField(help_text="Description of the service'sfunction", max_length=500)),
                ('url', models.CharField(help_text="endpoint for the service's API", max_length=200)),
                ('last_ok_status', models.IntegerField(default=0, help_text="number of pings since last 200 response from the task's  /status endpoint")),
                ('enabled', models.BooleanField(default=True, help_text='Whether to run the task as part of a release.')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Time the task was created')),
                ('creator', models.ForeignKey(blank=True, help_text='The user who created the service', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('list_all_releaseservice', 'Show all release services')],
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='ReleaseTask',
            fields=[
                ('kf_id', models.CharField(default=creator.releases.models.task_id, max_length=11, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='UUID used internally')),
                ('state', django_fsm.FSMField(default='waiting', help_text='The current state of the task', max_length=50)),
                ('progress', models.IntegerField(default=0, help_text='Optional field representing what percentage of the task has been completed')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Time the task was created')),
                ('job_log', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='job_log', to='jobs.JobLog')),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='releases.Release')),
                ('release_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='releases.ReleaseService')),
            ],
            options={
                'permissions': [('list_all_releasetask', 'Show all release tasks')],
                'get_latest_by': 'created_at',
            },
        ),
    ]
