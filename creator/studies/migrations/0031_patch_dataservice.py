# Generated by Django 2.2.24 on 2021-11-02 18:23

"""
This migration patches the new attributes into the DataService Study
entities using the spreadsheet found in this migrations folder.
"""

from django.conf import settings
from django.db import migrations

from pprint import pformat
import logging
import requests

logger = logging.getLogger(__name__)


def patch_helper(kf_id, study_dict):
    """
    Helper function to patch the data in study_dict to the kf_id Study in
    DataService.
    """
    # Patch DataService
    try:
        resp = requests.patch(
            f"{settings.DATASERVICE_URL}/studies/{kf_id}",
            json=study_dict,
            timeout=settings.REQUESTS_TIMEOUT,
            headers=settings.REQUESTS_HEADERS,
        )
    except requests.exceptions.RequestException as e:
        raise Exception(f"Problem updating study {kf_id}: {e}")
    
    # Study not found in DataService
    if resp.status_code == 404:
        logger.warning(
            f"Study {kf_id} was not found in the DataService when trying to "
            "update its short_code, domain, and program fields."
        )
        return
    # Raise an error if it looks like study failed to update
    if not resp.status_code == 200 or "results" not in resp.json():
        error = resp.json()
        if "_status" in error:
            error = error["_status"]
        if "message" in error:
            error = error["message"]
        raise Exception(f"Problem updating study {kf_id}: {error}")

    logger.info(
        f"Study {kf_id} had attributes patched in DataService using the "
        f"following data: {pformat(study_dict)}."
    )


def patch_attrs(apps, schema_editor):
    """
    Patch the short_code, domain, and program attributes of Study objects
    in the DataService using the provided spreadsheet.
    """
    if not (
            settings.FEAT_DATASERVICE_UPDATE_STUDIES
            and settings.DATASERVICE_URL
        ):
        logger.warning(
            "Migration to patch new Study model fields in DataService did not "
            "run because DataService settings are not set up properly."
        )
        return
    Study = apps.get_model("studies", "Study")
    for study in Study.objects.all():
        kf_id = study.kf_id
        study_dict = {
            "short_code": study.short_code,
            "domain": study.domain,
            "program": study.program,
        }
        patch_helper(kf_id, study_dict)


def undo_patch_attrs(apps, schema_editor):
    """
    Undo patching of the new Study model fields by setting them to default
    values.
    """
    if not (
            settings.FEAT_DATASERVICE_UPDATE_STUDIES
            and settings.DATASERVICE_URL
        ):
        logger.warning(
            "Function to undo patching of new Study model fields in "
            "DataService did not run because DataService settings are not set "
            "up properly."
        )
        return
    Study = apps.get_model("studies", "Study")
    for study in Study.objects.all():
        kf_id = study.kf_id
        study_dict = {
            "short_code": "PLACEHOLDER",
            "domain": "UNKNOWN",
            "program": study.organization.name,
        }

        patch_helper(kf_id, study_dict)


class Migration(migrations.Migration):

    dependencies = [
        ('studies', '0030_add_and_populate_program'),
    ]

    operations = [
        migrations.RunPython(patch_attrs, reverse_code=undo_patch_attrs),
    ]
