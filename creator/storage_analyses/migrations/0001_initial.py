# Generated by Django 2.2.24 on 2021-11-12 22:46

import creator.storage_analyses.models
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StorageAnalysis',
            fields=[
                ('id', models.CharField(default=creator.storage_analyses.models.storage_analysis_id, help_text='Human friendly ID assigned to the storage_analysis', max_length=11, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, help_text='UUID used internally')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When the storage_analysis was created', null=True)),
                ('refreshed_at', models.DateTimeField(help_text='When the stored analysis was recomputed', null=True)),
                ('scanned_storage_at', models.DateTimeField(help_text='When the cloud storage inventory was produced', null=True)),
                ('stats', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='The the numerical storage analysis stats')),
                ('study', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storage_analyses', to='studies.Study')),
            ],
            options={
                'permissions': [('list_all_storageanalysis', 'Show all storage_analyses')],
            },
        ),
        migrations.CreateModel(
            name='FileAudit',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, help_text='When the file audit was created', null=True)),
                ('result', models.CharField(choices=[('matched', 'matched'), ('missing', 'missing'), ('differ', 'differ'), ('moved', 'moved'), ('unexpected', 'unexpected'), ('unknown', 'unknown')], help_text='Result of the file audit', max_length=50)),
                ('source_filename', models.CharField(blank=True, help_text='The original name of the uploaded file', max_length=256, null=True)),
                ('expected_url', models.URLField(blank=True, help_text='Url of the file in cloud storage', null=True)),
                ('expected_hash', models.CharField(blank=True, help_text='The hash digest of file before upload', max_length=256, null=True)),
                ('actual_hash', models.CharField(blank=True, help_text='The hash digest of file in cloud storage', max_length=256, null=True)),
                ('expected_size', models.BigIntegerField(blank=True, help_text='Expected size of the uploaded file in bytes', null=True, validators=[django.core.validators.MinValueValidator(0, 'File size must be a positive number')])),
                ('actual_size', models.BigIntegerField(blank=True, help_text='Actual size of the file on cloud storage in bytes', null=True, validators=[django.core.validators.MinValueValidator(0, 'File size must be a positive number')])),
                ('hash_algorithm', models.CharField(blank=True, help_text='The name of the hash algorithm used to compute the file hash', max_length=256, null=True)),
                ('custom_fields', django.contrib.postgres.fields.jsonb.JSONField(default=dict, help_text='Any other columns in the file upload manifest that should be included in the file audit table')),
                ('storage_analysis', models.ForeignKey(help_text='id of the storage analysis this audit belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='file_audits', to='storage_analyses.StorageAnalysis')),
            ],
            options={
                'permissions': [('list_all_fileaudits', 'Show all file_audits')],
            },
        ),
    ]
