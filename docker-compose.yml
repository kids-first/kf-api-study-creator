version: '3.4'

services:
  web:
    build:
      context: .
      target: dev
    env_file: docker.env
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-creator.settings.testing}
      # Options are: DATASERVICE, url of dataservice, or FAKE
      - PRELOAD_DATA=${PRELOAD_DATA:-FAKE}
      - DEVELOPMENT_ENDPOINTS
      - DEBUG
      - DEVELOP
    volumes:
      - .:/app
    ports:
      - '5002:8080'
    depends_on:
      - postgres
      - redis
  worker:
    build:
      context: .
      target: dev
    command: '/app/bin/dev_worker.sh'
    volumes:
      - ./:/app/
    env_file: docker.env
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-creator.settings.testing}
    depends_on:
      - postgres
      - redis
      - web
  scheduler:
    build:
      context: .
      target: dev
    command: './manage.py rqscheduler -i 5'
    volumes:
      - ./:/app/
    env_file: docker.env
    environment:
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-creator.settings.testing}
    depends_on:
      - postgres
      - redis
      - web
  postgres:
    image: postgres:11.1
    environment:
      - POSTGRES_DB=study-creator
      - POSTGRES_USER=study-creator
      - POSTGRES_PASSWORD=password
    ports:
      - '5432:5432'
  redis:
    image: redis:latest
    ports:
      - '6379:6379'
  dataservice:
    image: kfdrc/kf-api-dataservice:latest
    command: /bin/ash -c "sleep 5; ./bin/run.sh"
    environment:
      - FLASK_CONFIG=development
      - PG_NAME=dataservice
      - PG_HOST=dataservice-pg
    depends_on:
      - dataservice-pg
    ports:
      - "5000:80"
  dataservice-pg:
    image: postgres:11.1
    environment:
      - POSTGRES_DB=dataservice
networks:
  default:
    external:
      name: kf-data-stack
